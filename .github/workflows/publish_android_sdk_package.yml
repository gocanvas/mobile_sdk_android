name: Publish Android SDK Package

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: 'The package version to publish'
        required: true

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Decode the GitHub App Private Key
        id: decode
        run: |
          private_key=$(echo "${{ secrets.GH_APP_PRIVATE_KEY }}" | base64 -d | awk 'BEGIN {ORS="\\n"} {print}' | head -c -2) &> /dev/null
          echo "::add-mask::$private_key"
          echo "private-key=$private_key" >> "$GITHUB_OUTPUT"

      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ steps.decode.outputs.private-key }}
          owner: ${{ github.repository_owner }}
          repositories: |
            android_sdk
            mobile_sdk_android

      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout android_sdk
        run: |
          git clone https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/gocanvas/android_sdk.git android_sdk
          cd android_sdk
          git checkout tags/release/${{ github.event.inputs.packageVersion }}

      - name: Set environment variables
        run: |
          echo "PACKAGES_URL=https://maven.pkg.github.com/gocanvas/mobile_sdk_android" >> $GITHUB_ENV
          echo "PACKAGES_USERNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "PACKAGES_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          echo "PACKAGES_VERSION=${{ github.event.inputs.packageVersion }}" >> $GITHUB_ENV

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Access LOCAL_PROPERTIES
        working-directory: android_sdk
        run: echo "${{ secrets.GOCANVAS_LOCAL_PROPERTIES }}" >> ./local.properties

      - name: Grant execute permission for gradlew
        working-directory: android_sdk
        run: chmod +x gradlew

      - name: Publish new package
        working-directory: android_sdk
        run: |
          echo "PACKAGES_URL ---> ${{env.PACKAGES_URL}}"
          echo "PACKAGES_USERNAME ---> ${{env.PACKAGES_USERNAME}}"
          echo "PACKAGES_TOKEN ---> ${{env.PACKAGES_TOKEN}}"
          echo "VERSION ---> ${{env.PACKAGES_VERSION}}"
          ./gradlew :canvasSdk:publishSdkReleasePublicationToGitHubPackagesRepository -DPACKAGES_URL=${{env.PACKAGES_URL}} -DPACKAGES_USERNAME=${{env.PACKAGES_USERNAME}} -DPACKAGES_TOKEN=${{env.PACKAGES_TOKEN}} -DPACKAGES_VERSION=${{env.PACKAGES_VERSION}}

      - name: Cleanup
        run: |
          rm -rf android_sdk

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"